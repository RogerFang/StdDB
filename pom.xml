<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>StdDB</groupId>
  <artifactId>StdDB</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>StdDB Maven Webapp</name>
  <url>http://maven.apache.org</url>

  <properties>
    <!--JAR start-->
    <junit.version>4.11</junit.version>
    <assertj.version>3.4.1</assertj.version>

    <spring.version>4.2.6.RELEASE</spring.version>

    <!--AOP-->
    <aspectj.version>1.7.4</aspectj.version>
    <aspectjweaver.version>1.7.4</aspectjweaver.version>

    <mybatis.version>3.3.1</mybatis.version>
    <mybatis-spring.version>1.2.4</mybatis-spring.version>

    <mysql-connector.version>5.1.21</mysql-connector.version>
    <druid.version>1.0.11</druid.version>

    <jstl.version>1.2</jstl.version>
    <jsp-api.version>2.0</jsp-api.version>
    <servlet-api.version>2.5</servlet-api.version>

    <!--权限验证-->
    <shiro.version>1.2.4</shiro.version>

    <!--common util begin-->
    <commons-fileupload.version>1.3.1</commons-fileupload.version>
    <commons-io.version>2.4</commons-io.version>
    <!--common util end-->

    <!--json begin-->
    <!--<jackson-core-asl.version>1.9.13</jackson-core-asl.version>-->
    <!--<jackson-mapper-asl.version>1.9.13</jackson-mapper-asl.version>-->
    <jackson-databind.version>2.4.4</jackson-databind.version>
    <fastjson.version>1.2.11</fastjson.version>
    <!--json end-->

    <!--log begin-->
    <slf4j-log4j12.version>1.7.7</slf4j-log4j12.version>
    <!--log end-->

    <sitemesh.version>2.4.2</sitemesh.version>
    <!--JAR end-->

    <!--PLUGIN start-->
    <jetty-plugin.version>8.0.0.M3</jetty-plugin.version>
    <!--PLUGIN end-->

    <!--OTHER start-->
    <jetty-port.version>80</jetty-port.version>
    <jetty-path.version>/StdDB</jetty-path.version>
    <!--OTHER end-->
  </properties>

  <dependencies>
    <!--spring start-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-expression</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <!-- spring end -->

    <!--spring aop begin-->
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>${aspectj.version}</version>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>${aspectjweaver.version}</version>
    </dependency>
    <!--spring aop end-->

    <!--servlet&jsp api start-->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${servlet-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>${jsp-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <!--servlet&jsp api end-->
    <!--jstl start-->
    <dependency>
      <groupId>jstl</groupId>
      <artifactId>jstl</artifactId>
      <version>${jstl.version}</version>
    </dependency>
    <!--jstl end-->

    <!--PERSISTENCE begin-->
    <!--mysql connector start-->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql-connector.version}</version>
      <scope>runtime</scope>
    </dependency>
    <!--mysql connector end-->
    <!--mybatis start-->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>${mybatis.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>${mybatis-spring.version}</version>
    </dependency>
    <!--druid start-->
    <dependency>
      <!--这个组件具体可以看这里介绍:http://www.oschina.net/p/druid-->
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>${druid.version}</version>
    </dependency>
    <!--druid end-->
    <!--PERSISTENCE end-->

    <!--shiro start-->
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-core</artifactId>
      <version>${shiro.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>slf4j-api</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-spring</artifactId>
      <version>${shiro.version}</version>
    </dependency>

    <!--加入commons-fileupload依赖,maven会自动的导入其所依赖的commons-io,为了排除重复依赖,可以添加以下<exclusions>-->
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>${commons-fileupload.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>commons-io</artifactId>
          <groupId>commons-io</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>

    <!--json begin-->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson-databind.version}</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>${fastjson.version}</version>
    </dependency>
    <!--json end-->

    <!--log start-->
    <!--slf4j独立于任何日志实现,加入slf4j-log4j12依赖后,maven会自动导入相关的slf4j-api.jar和log4j.jar-->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j-log4j12.version}</version>
    </dependency>
    <!--log end-->

    <dependency>
      <groupId>opensymphony</groupId>
      <artifactId>sitemesh</artifactId>
      <version>${sitemesh.version}</version>
    </dependency>
  </dependencies>
  <build>
    <finalName>StdDB</finalName>

    <resources>
      <!--表示把所有resources目录下的文件打包时也打包到对应的resources目录下-->
      <resource>
        <directory>${basedir}/src/main/resources</directory>
      </resource>
    </resources>

    <plugins>
      <!--jetty-->
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${jetty-plugin.version}</version>
        <configuration>
          <stopKey>foo</stopKey>
          <stopPort>9999</stopPort>
          <connectors>
            <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
              <port>${jetty-port.version}</port>
            </connector>
          </connectors>
          <webAppConfig>
            <!--访问地址：http://localhost:8080/index.jsp-->
            <!--如果不带index.jsp会直接报404，这个一直没找到原因-->
            <contextPath>${jetty-path.version}</contextPath>
          </webAppConfig>
          <!--scanIntervalSeconds 可选[秒]。在很短的时间间隔内在扫描web应用检查是否有改变，如果发觉有任何改变则自动热部署。默认为0，表示禁用热部署检查。任何一个大于0的数字都将表示启用。-->
          <!--<scanIntervalSeconds>60</scanIntervalSeconds>-->
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
